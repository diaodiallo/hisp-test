[{"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/index.tsx":"1","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/App.tsx":"2","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/models/mock-pokemon.ts":"3","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-list.tsx":"4","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-card.tsx":"5","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-date.ts":"6","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-type.ts":"7","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-details.tsx":"8","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/page-not-found.tsx":"9","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-edit.tsx":"10","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-form.tsx":"11","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/services/pokemon-service.ts":"12","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/index.tsx":"13","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/App.tsx":"14","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/LoginPage.tsx":"15","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/UsersList.tsx":"16","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/AccueilPage.tsx":"17","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-user.ts":"18","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/userForm.tsx":"19","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/helpers/format-roles.ts":"20","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-role.ts":"21","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/user.ts":"22","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/components/nav-bar.tsx":"23"},{"size":155,"mtime":1607776842415,"results":"24","hashOfConfig":"25"},{"size":955,"mtime":1610414112451,"results":"26","hashOfConfig":"25"},{"size":2264,"mtime":1607799782313,"results":"27","hashOfConfig":"25"},{"size":777,"mtime":1608924720959,"results":"28","hashOfConfig":"25"},{"size":1434,"mtime":1608717603266,"results":"29","hashOfConfig":"25"},{"size":164,"mtime":1608919620336,"results":"30","hashOfConfig":"25"},{"size":1021,"mtime":1608660828176,"results":"31","hashOfConfig":"25"},{"size":2869,"mtime":1608995010857,"results":"32","hashOfConfig":"25"},{"size":497,"mtime":1608718058048,"results":"33","hashOfConfig":"25"},{"size":1003,"mtime":1608924730136,"results":"34","hashOfConfig":"25"},{"size":7927,"mtime":1608994986292,"results":"35","hashOfConfig":"25"},{"size":1532,"mtime":1610414883172,"results":"36","hashOfConfig":"25"},{"size":155,"mtime":1610471092257,"results":"37","hashOfConfig":"38"},{"size":913,"mtime":1610496605298,"results":"39","hashOfConfig":"38"},{"size":2093,"mtime":1610495276104,"results":"40","hashOfConfig":"38"},{"size":1266,"mtime":1610497636550,"results":"41","hashOfConfig":"38"},{"size":408,"mtime":1610497006806,"results":"42","hashOfConfig":"38"},{"size":429,"mtime":1610475460999,"results":"43","hashOfConfig":"38"},{"size":4310,"mtime":1610494923088,"results":"44","hashOfConfig":"38"},{"size":367,"mtime":1610477782719,"results":"45","hashOfConfig":"38"},{"size":170,"mtime":1610481636777,"results":"46","hashOfConfig":"38"},{"size":570,"mtime":1610493437067,"results":"47","hashOfConfig":"38"},{"size":885,"mtime":1610497139195,"results":"48","hashOfConfig":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"jcuufu",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"io0woj",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/index.tsx",[],["105","106"],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/App.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/models/mock-pokemon.ts",[],["107","108"],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-list.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-card.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-date.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-type.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-details.tsx",["109"],"import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                    <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/page-not-found.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-edit.tsx",["110"],"import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport PokemonService from '../services/pokemon-service';\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-form.tsx",[],["111","112"],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/services/pokemon-service.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/index.tsx",[],["113","114"],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/App.tsx",["115"],"import React, { FunctionComponent } from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport AccueilPage from './pages/AccueilPage';\nimport UsersList from './pages/UsersList';\nimport LoginPage from './pages/LoginPage';\nimport UserForm from './pages/userForm';\n\nconst App: FunctionComponent = () => {\n  \n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className=\"nav-wrapper teal\">\n            <div className=\"brand-logo center\">HISP Africa test App</div>\n          </div>\n        </nav>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage}/>\n        <Route exact path=\"/accueil\" component={AccueilPage}/>\n        <Route exact path=\"/users\" component={UsersList}/>\n        <Route path=\"/user/add\" component={UserForm}/>\n        {/* <Route component={PageNotFound}/> */}\n      </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/LoginPage.tsx",["116"],"import React, { FunctionComponent, useState } from 'react';\nimport User from '../models/user';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n  user: User\n};\n\ntype Field = {\n  value?: any\n  error?: String\n  isValid?: boolean\n}\n\ntype Form = {\n  username: Field\n  password: Field\n}\n\nconst LoginForm: FunctionComponent<Props> = ({ user }) => {\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '', isValid: true },\n    password: { value: '', isValid: true },\n  });\n\n  const history = useHistory();\n\n  // const validateLogin() {\n\n  // };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // if(isFormValid) {\n    //   pokemon.name = form.name.value;\n    //   pokemon.cp = form.cp.value;\n    //   pokemon.hp = form.hp.value;\n    //   pokemon.types = form.types.value;\n    //   PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    // }\n    history.push(`/accueil`);\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User name</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.username.value} ></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User name</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.username.value} ></input>\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Connexion</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/UsersList.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/AccueilPage.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-user.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/userForm.tsx",["117"],"import React, { FunctionComponent, useState } from 'react';\nimport User from '../models/user';\nimport { useHistory } from 'react-router-dom';\nimport formatRole from '../helpers/format-roles';\nimport ROLE from '../models/mock-role';\n\ntype Field = {\n  value?: any\n  error?: String\n  isValid?: boolean\n}\n\ntype Form = {\n  username: Field\n  password: Field\n  datenaissance: Field\n  roles: Field\n}\n\ntype Data = {\n    user: User\n    roles: []\n}\n\nconst UserForm: FunctionComponent = () => {\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '', isValid: true },\n    password: { value: '', isValid: true },\n    datenaissance: { value: '01-01-2010', isValid: true },\n    roles: { value: [], isValid: true }\n  });\n\n  const [data, setData] = useState<Data>({\n    user: new User('username', 'password', new Date()),\n    roles: []\n  });\n\n  const userRoles = ROLE;\n\n  const history = useHistory();\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name\n    const fieldValue: string = e.target.value\n    const newField: Field = {[fieldName]: {value: fieldValue}};\n    \n    setForm({...form, ...newField});\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n      data.user.username = form.username.value;\n      data.user.password = form.password.value;\n      data.user.datenaissance = form.datenaissance.value;\n      data.roles = form.roles.value;\n      // Sen the user in the db\n    //   PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    history.push(`/users`);\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* User name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User name</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {form.username.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.username.error}\n                  </div>\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User password</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {form.password.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.password.error}\n                  </div>\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Date naissance</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.datenaissance.value} onChange={e => handleInputChange(e)}></input>\n                  {form.datenaissance.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.datenaissance.error}\n                  </div>\n                  }\n                </div>\n               \n                {/* User roles */}\n                <div className=\"form-group\">\n                  <label>Roles</label>\n                  {userRoles.map(role => (\n                    <div key={role.id} style={{ marginBottom: '10px' }}>\n                      <label>\n                        <input id={role.id} type=\"checkbox\" className=\"filled-in\" value={role.name} ></input>\n                        <span>\n                          <p className={formatRole(role.name)}>{role.name}</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default UserForm;","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/helpers/format-roles.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-role.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/user.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/components/nav-bar.tsx",["118"],"import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n  \nconst NavBar: FunctionComponent = () => {\n\n    const history = useHistory();\n\n    const goToUsers = () => {\n      history.push(`/users`);\n    }\n    const goToAccueil = () => {\n        history.push(`/accueil`);\n      }\n    const goToLogout = () => {\n        history.push(`/`);\n      }\n    \n  return (\n    <div className=\"col s6 m4\">\n     <nav>\n          <div className=\"nav-wrapper teal\">\n            <div className=\"brand-logo center\">\n            <button className=\"btn\" onClick={() => goToAccueil()}>Accueil</button>\n            <button className=\"btn\" onClick={() => goToUsers()}>Users</button>\n            <button className=\"btn\" onClick={() => goToLogout()}>Logout</button>\n            </div>\n          </div>\n        </nav>\n    </div>\n  );\n}\n  \nexport default NavBar;\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":16},{"ruleId":"119","replacedBy":"129"},{"ruleId":"121","replacedBy":"130"},{"ruleId":"119","replacedBy":"131"},{"ruleId":"121","replacedBy":"132"},{"ruleId":"125","severity":1,"message":"133","line":2,"column":49,"nodeType":"127","messageId":"128","endLine":2,"endColumn":53},{"ruleId":"125","severity":1,"message":"134","line":22,"column":16,"nodeType":"127","messageId":"128","endLine":22,"endColumn":23},{"ruleId":"125","severity":1,"message":"135","line":34,"column":16,"nodeType":"127","messageId":"128","endLine":34,"endColumn":23},{"ruleId":"125","severity":1,"message":"136","line":1,"column":36,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"@typescript-eslint/no-unused-vars","'POKEMONS' is defined but never used.","Identifier","unusedVar",["137"],["138"],["137"],["138"],"'Link' is defined but never used.","'setForm' is assigned a value but never used.","'setData' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]