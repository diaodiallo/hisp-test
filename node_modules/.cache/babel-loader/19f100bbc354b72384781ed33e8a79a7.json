{"ast":null,"code":"export default class UserService {\n  static getUsers() {\n    return fetch('http://localhost:3001/users').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getUser(id) {\n    return fetch(`http://localhost:3001/users/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updateUser(user) {\n    return fetch(`http://localhost:3001/users/${user.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static deleteUser(user) {\n    return fetch(`http://localhost:3001/users/${user.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.error(error);\n  }\n\n}","map":{"version":3,"sources":["/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/services/user-service.ts"],"names":["UserService","getUsers","fetch","then","response","json","catch","error","handleError","getUser","id","data","isEmpty","updateUser","user","method","body","JSON","stringify","headers","deleteUser","Object","keys","length","console"],"mappings":"AAEA,eAAe,MAAMA,WAAN,CAAkB;AAE/B,SAAOC,QAAP,GAAmC;AACjC,WAAOC,KAAK,CAAC,6BAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJC,KAFI,CAEEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFX,CAAP;AAGD;;AAED,SAAOE,OAAP,CAAeC,EAAf,EAA+C;AAC7C,WAAOR,KAAK,CAAE,+BAA8BQ,EAAG,EAAnC,CAAL,CACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFrC,EAGJL,KAHI,CAGEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHX,CAAP;AAID;;AAED,SAAOM,UAAP,CAAkBC,IAAlB,EAA6C;AAC3C,WAAOZ,KAAK,CAAE,+BAA8BY,IAAI,CAACJ,EAAG,EAAxC,EAA2C;AACrDK,MAAAA,MAAM,EAAE,KAD6C;AAErDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF+C;AAGrDK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAH4C,KAA3C,CAAL,CAKNhB,IALM,CAKDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALX,EAMNC,KANM,CAMAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANT,CAAP;AAOD;;AAED,SAAOa,UAAP,CAAkBN,IAAlB,EAA2C;AACzC,WAAOZ,KAAK,CAAE,+BAA8BY,IAAI,CAACJ,EAAG,EAAxC,EAA2C;AACrDK,MAAAA,MAAM,EAAE,QAD6C;AAErDI,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF4C,KAA3C,CAAL,CAINhB,IAJM,CAIDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJX,EAKNC,KALM,CAKAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CALT,CAAP;AAMD;;AAED,SAAOK,OAAP,CAAeD,IAAf,EAAsC;AACpC,WAAOU,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlB,KAA6B,CAApC;AACD;;AAED,SAAOf,WAAP,CAAmBD,KAAnB,EAAuC;AACrCiB,IAAAA,OAAO,CAACjB,KAAR,CAAcA,KAAd;AACD;;AAxC8B","sourcesContent":["import User from \"../models/user\";\n \nexport default class UserService {\n\n  static getUsers(): Promise<User[]> {\n    return fetch('http://localhost:3001/users')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n  }\n \n  static getUser(id: number): Promise<User|null> {\n    return fetch(`http://localhost:3001/users/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n  }\n\n  static updateUser(user: User): Promise<User> {\n    return fetch(`http://localhost:3001/users/${user.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(user),\n      headers: { 'Content-Type': 'application/json'}\n    })\n    .then(response => response.json())\n    .catch(error => this.handleError(error));\n  }\n\n  static deleteUser(user: User): Promise<{}> {\n    return fetch(`http://localhost:3001/users/${user.id}`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json'}\n    })\n    .then(response => response.json())\n    .catch(error => this.handleError(error));\n  }\n \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}"]},"metadata":{},"sourceType":"module"}