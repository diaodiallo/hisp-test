{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/userForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport User from '../models/user';\nimport { useHistory } from 'react-router-dom';\nimport formatRole from '../helpers/format-roles';\nimport ROLE from '../models/mock-role';\n\nconst UserForm = () => {\n  _s();\n\n  const [form, setForm] = useState({\n    username: {\n      value: '',\n      isValid: true\n    },\n    password: {\n      value: '',\n      isValid: true\n    },\n    datenaissance: {\n      value: '01-01-2010',\n      isValid: true\n    },\n    roles: {\n      value: [],\n      isValid: true\n    }\n  });\n  const UserRoles = ROLE;\n  user = new User();\n  const history = useHistory();\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    user.username = form.username.value;\n    user.password = form.password.value;\n    user.datenaissance = form.datenaissance.value;\n    roles = form.roles.value; // Sen the user in the db\n    //   PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n\n    history.push(`/users`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 m8 offset-m2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stacked\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"User name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"name\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.username.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), form.username.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.username.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"User password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"name\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.password.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), form.password.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.password.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Date naissance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"name\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.datenaissance.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), form.datenaissance.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.datenaissance.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Roles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), UserRoles.map(role => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: role.id,\n                      type: \"checkbox\",\n                      className: \"filled-in\",\n                      value: role.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: formatRole(role.name),\n                        children: role.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this)\n                }, role.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-action center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn\",\n                children: \"Valider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"ukPmp1ZOPc0QAm03QX2fC397fUw=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/userForm.tsx"],"names":["React","useState","User","useHistory","formatRole","ROLE","UserForm","form","setForm","username","value","isValid","password","datenaissance","roles","UserRoles","user","history","handleInputChange","e","fieldName","target","name","fieldValue","newField","handleSubmit","preventDefault","push","error","map","role","marginBottom","id"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport User from '../models/user';\nimport { useHistory } from 'react-router-dom';\nimport formatRole from '../helpers/format-roles';\nimport Role from '../models/role';\nimport ROLE from '../models/mock-role';\n\ntype Field = {\n  value?: any\n  error?: String\n  isValid?: boolean\n}\n\ntype Form = {\n  username: Field\n  password: Field\n  datenaissance: Field\n  roles: Field\n}\n\nconst UserForm: FunctionComponent = () => {\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '', isValid: true },\n    password: { value: '', isValid: true },\n    datenaissance: { value: '01-01-2010', isValid: true },\n    roles: { value: [], isValid: true }\n  });\n\n  const UserRoles = ROLE;\n  user = new User();\n\n\n  const history = useHistory();\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name\n    const fieldValue: string = e.target.value\n    const newField: Field = {[fieldName]: {value: fieldValue}};\n    \n    setForm({...form, ...newField});\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n      user.username = form.username.value;\n      user.password = form.password.value;\n      user.datenaissance = form.datenaissance.value;\n      roles = form.roles.value;\n      // Sen the user in the db\n    //   PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    history.push(`/users`);\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* User name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User name</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {form.username.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.username.error}\n                  </div>\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User password</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {form.password.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.password.error}\n                  </div>\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Date naissance</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.datenaissance.value} onChange={e => handleInputChange(e)}></input>\n                  {form.datenaissance.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.datenaissance.error}\n                  </div>\n                  }\n                </div>\n               \n                {/* User roles */}\n                <div className=\"form-group\">\n                  <label>Roles</label>\n                  {UserRoles.map(role => (\n                    <div key={role.id} style={{ marginBottom: '10px' }}>\n                      <label>\n                        <input id={role.id} type=\"checkbox\" className=\"filled-in\" value={role.name} ></input>\n                        <span>\n                          <p className={formatRole(role.name)}>{role.name}</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}